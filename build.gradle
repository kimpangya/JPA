plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'me.pangya'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // 1. JAVA 안에 JDBC 는 기본적으로 들어있어서 추가 불필요

    // 3. PostgreSQL 의존성 추가
    implementation 'org.postgresql:postgresql:42.7.2'

    // 4. SpringBoot 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // JUNIT 테스트를 위한 기본 의존성
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    // 5. JDBC Template 등.. Spring 의존성을 받기위한 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 6. MyBatis 실습을 위한 의존성
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.1'
    runtimeOnly 'org.postgresql:postgresql'

    // 7. 개발편의를 위한 Lombok 의존성 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 8. RawJPA 적용을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    testImplementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    // 9. QueryDSL 적용을 위한 의존성 (SpringBoot3.0 부터는 jakarta 사용해야함)
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

test {
    useJUnitPlatform()
}